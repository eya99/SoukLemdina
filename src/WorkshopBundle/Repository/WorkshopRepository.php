<?php

namespace WorkshopBundle\Repository;

/**
 * WorkshopRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WorkshopRepository extends \Doctrine\ORM\EntityRepository
{
    function RechercheAv($valeur){
        $query = WorkshopRepository::createQueryBuilder('w')
            ->where('UPPER(r.subject) LIKE UPPER(:valeur)')
            ->orWhere('UPPER(w.nomWorkshop) LIKE UPPER(:valeur)')
            ->orWhere('UPPER(w.adresse) LIKE UPPER(:valeur)')
            ->orWhere('UPPER(w.dateDebut) LIKE UPPER(:valeur)')




            ->setParameter('valeur','%'.$valeur.'%')
            ->getQuery();

        return $query->getResult();
    }

  public function getByDate(\Datetime $date)
    {
        $from = new \DateTime($date->format("Y-m-d")." 00:00:00");
        $to   = new \DateTime($date->format("Y-m-d")." 23:59:59");

        $qb = $this->createQueryBuilder("d");
        $qb
            ->andWhere('d.dateDebut BETWEEN :from AND :to')
            ->andWhere('d.dateFin BETWEEN :from AND :to')
            ->setParameter('from', $from )
            ->setParameter('to', $to);

        $result = $qb->getQuery()->getResult();

        return $result;
    }
   /* public function getDays(\DateTime $DateDebut, \DateTime $DateFin)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('c')
            ->from('WorkshopBundle:Workshop', 'd')
            ->where('d.date BETWEEN :DateDebut AND :DateFin')
            ->setParameter('DateDebut', $DateDebut)
            ->setParameter('DateFin', $DateFin)
        ;

        $result = $qb->getQuery()->getResult();

        return $result;
    }
   public function calendarAction()
    {
        $currentMonthDateTime = new \DateTime();
        $DateDebut = $currentMonthDateTime->modify('first day of this month');
        $currentMonthDateTime = new \DateTime();
        $DateFin = $currentMonthDateTime->modify('last day of this month');

        $days = $this->getDoctrine()
            ->getRepository('ProjectBundle:Calendar')
            ->getDays($DateDebut,  $DateFin);

        return ['days' => $days];
    }*/
}
