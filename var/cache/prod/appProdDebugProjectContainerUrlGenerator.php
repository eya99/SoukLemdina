<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        'workshop_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/workshop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_AjoutWorkshop' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::AjoutWorkshopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/AjoutWorkshop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_AfficheVisitWorkshop' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::AfficheVisitWorkshopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/AfficheVisitWorkshop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_AfficheWorkshop' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::AfficheWorkshopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/AfficheWorkshop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_DeleteWorkshop' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::DeleteWorkshopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/DeleteWorkshop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_UpdateWorkshop' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::UpdateWorkshopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/UpdateWorkshop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_DetailsWorkshop' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::DetailsWorkshopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/DetailsWorkshop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_Redirect' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::RedirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/Redirect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_Participer_work' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::Participer_workAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/Participer_work',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_PasParticiper_work' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::PasParticiper_workAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/PasParticiper_work',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_RechercheWorkshop' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::RechercheWorkshopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/RechercheWorkshop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_ListeParticipant' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::ListeParticipantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/ListeParticipant',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'graphePie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/pie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'RechercheDynamiq' => array (  0 =>   array (    0 => 'var',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::RechercheDynamiqAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'var',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/RechercheDynamiq',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'FiltreDQL' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::FiltreDQLAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/FiltreDQL',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'FiltrePrix' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::FiltrePrixAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workshop/FiltrePrix',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_AfficheProfile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WorkshopBundle\\Controller\\WorkshopController::AfficheProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/workshop/AffichePr',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'local_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LocalBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/local/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stock_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_produit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/ajout-produit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::afficheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/affiche-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modif_produits' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ecommerce/affiche-produits/modif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supp_produits' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::supprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ecommerce/affiche-produits/supp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'recherche_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/recherche-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view_produit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::produitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ecommerce/view-produit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'art_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::artAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/art-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'habillement_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::habillementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/habillement-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bijoux_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::bijouxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/bijoux-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'territoire_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::territoireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/terrtoire-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'maroquinerie_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::maroquinerieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/maroquinerie-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'decoration_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::decorationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/decoration-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'libsort_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::libsortAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/libsort-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'prixasc_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::prixascAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/prixasc-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'prixdesc_produits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\ProduitController::prixdescAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/prixdesc-produits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_wishlist' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\WishlistController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ecommerce/ajout-wishlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_wishlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\WishlistController::afficheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ecommerce/affiche-wishlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_wishlist' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'StockBundle\\Controller\\WishlistController::supprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ecommerce/supprimer-wishlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/social/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_ajout_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/social/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_modifier_profile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/mod',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_recherche_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/social/rech',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_check_profile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_delete_profile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/del',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_delete_image' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::delImageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/delim',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_suivre_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::followAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/suiv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_pasuivre_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::unfollowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/pasuiv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_delete_post' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::delPostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/delp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_modifier_post' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::modPostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/modp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_delete_post_fromWelcome' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::delPostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/delp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_modifier_post_fromWelcome' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::modPostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/modp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_suivreAX_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::followAXAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/suivAX',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_pasuivreAX_user' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::unfollowAXAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/pasuivAX',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_postsAX_home' => array (  0 =>   array (    0 => 'deb',    1 => 'fin',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::postsAXAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fin',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deb',    ),    2 =>     array (      0 => 'text',      1 => '/social/postsAX',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'social_message_pick' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SocialBundle\\Controller\\DefaultController::pickAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/social/pick',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'evenement_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EvenementBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/evenement/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commande_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ligne_commande_aff' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDeCommandeController::AfficherLigneDeCommandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/commande/afflc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ligne_commande_modifier' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDeCommandeController::ModifierLigneDeCommandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/commande/modifierlc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ligne_commande_supprimer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDeCommandeController::SupprimerLigneDeCommandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/commande/supprimerlc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_ligne_commande' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDeCommandeController::AjoutLigneDeCommandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/ajoutbd',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDePanierController::supprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/commande/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDePanierController::ajouterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/commande/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'panier' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDePanierController::panierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/panier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commander_produit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDeCommandeController::PutInSessionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/commande/putinsession',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_commande' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CommandeBundle\\Controller\\LigneDeCommandeController::afficherCommandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commande/afficherCommande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PdfBundle\\Controller\\PdfController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/commande/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'back_office_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_visitor_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_inbox' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::inboxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_sent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::sentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/sent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_deleted' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::deletedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/deleted',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::newThreadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_new2' => array (  0 =>   array (    0 => 'username',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::newThread2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    1 =>     array (      0 => 'text',      1 => '/messages/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_delete' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_undelete' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::undeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/undelete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    2 =>     array (      0 => 'text',      1 => '/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_message_thread_view' => array (  0 =>   array (    0 => 'threadId',  ),  1 =>   array (    '_controller' => 'FOS\\MessageBundle\\Controller\\MessageController::threadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'threadId',    ),    1 =>     array (      0 => 'text',      1 => '/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
